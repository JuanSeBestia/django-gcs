"""
Django settings for django_gcp project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import environ

from google.oauth2 import service_account

# reading .env file
environ.Env.read_env()

# configure default paramaters
env = environ.Env(
    DEBUG=(bool, False),
    SECRET_KEY=(str, '-rb6o(e-kml%mxr&2iszre70b%oyytyj=*hurvi9x@idp40)%%'),
    ALLOWED_HOSTS=(list, []),
    SERVER_NAME=(str, ''),

    GS_BUCKET_NAME=(str, ''),
    GS_MEDIA_BUCKET_NAME=(str, ''),
    GS_STATIC_BUCKET_NAME=(str, ''),
    GS_PROJECT_ID=(str, ''),
    GS_CREDENTIALS=(str, ''),
    GS_AUTO_CREATE_BUCKET=(bool, False),
    GS_AUTO_CREATE_ACL=(str, ''),
    GS_DEFAULT_ACL=(str, ''),
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG')

ALLOWED_HOSTS = []
SERVER_NAME = env.str('SERVER_NAME')


# Application definition

INSTALLED_APPS = [
    'contacts.apps.ContactsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_gcp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_gcp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = 'static-root/'

MEDIA_URL = 'media-url/'
MEDIA_ROOT = 'media-root/'

## GOOGLE STORAGE
GS_BUCKET_NAME = env.str("GS_BUCKET_NAME")

## CUSTOM PROVIDER
# GS_MEDIA_BUCKET_NAME = env.str("GS_MEDIA_BUCKET_NAME")
# GS_STATIC_BUCKET_NAME = env.str("GS_STATIC_BUCKET_NAME")

GS_PROJECT_ID = env.str("GS_PROJECT_ID")

GS_LOCATION= 'location'

GS_CREDENTIALS = env.str("GS_CREDENTIALS")
if GS_CREDENTIALS:
    GS_CREDENTIALS = service_account.Credentials.from_service_account_file(GS_CREDENTIALS)

GS_AUTO_CREATE_BUCKET = env.str("GS_AUTO_CREATE_BUCKET")
GS_AUTO_CREATE_ACL = env.str("GS_AUTO_CREATE_ACL")
GS_DEFAULT_ACL = env.str("GS_DEFAULT_ACL")

if GS_CREDENTIALS and GS_PROJECT_ID and GS_BUCKET_NAME:
    ### Change default backend to write/read file objects
    DEFAULT_FILE_STORAGE = "storages.backends.gcloud.GoogleCloudStorage"
    THUMBNAIL_DEFAULT_STORAGE = "storages.backends.gcloud.GoogleCloudStorage"

    ### Change default backend to collect statics
    STATICFILES_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
    
    # DEFAULT_FILE_STORAGE = "django_gcp.gcs.GoogleCloudMediaStorage"
    # THUMBNAIL_DEFAULT_STORAGE = "django_gcp.gcs.GoogleCloudMediaStorage"

    # ### Change default backend to collect statics
    # STATICFILES_STORAGE = 'django_gcp.gcs.GoogleCloudStaticStorage'
    
    # STATIC_URL = 'https://storage.googleapis.com/{}/'.format(GS_STATIC_BUCKET_NAME)
    # MEDIA_URL = 'https://storage.googleapis.com/{}/'.format(GS_MEDIA_BUCKET_NAME)
    
    